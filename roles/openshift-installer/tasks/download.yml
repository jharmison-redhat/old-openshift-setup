---
- name: Pull latest openshift-install release info for version
  ansible.builtin.uri:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_channel }}-{{ openshift_version }}/release.txt
    return_content: yes
  register: release_text

- name: Identify minor release version
  ansible.builtin.set_fact:
    openshift_version_minor: |-
      {{ (release_text.content|regex_search('\nName:\s*4\S*', multiline=true)).split()|last }}

- name: Grab the signing key
  ansible.builtin.get_url:
    url: https://www.redhat.com/security/fd431d51.txt
    dest: '{{ _tmp_parent }}/rh_key.txt'

- name: Grab the latest release checksums
  ansible.builtin.get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_channel }}-{{ openshift_version }}/sha256sum.txt
    dest: '{{ tmp_dir }}/{{ openshift_version_minor }}-sha256sum.txt'

- name: Grab the latest helm checksums
  ansible.builtin.get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/helm/latest/sha256sum.txt
    dest: '{{ tmp_dir }}/helm-sha256sum.txt'

- name: Grab the signature file
  ansible.builtin.get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_channel }}-{{ openshift_version }}/sha256sum.txt.gpg
    dest: '{{ tmp_dir }}/{{ openshift_version_minor }}-sha256sum.txt.sig'

- name: Import RH key, verify signature
  ansible.builtin.shell: |
    trust_key() {
        echo -e '5\ny\n' | gpg --command-fd 0 --edit-key security@redhat.com trust
        gpg --update-trustdb
        echo changed
    }
    cd {{ _tmp_parent }}
    gpg --list-keys |& grep -qF security@redhat.com || gpg --import rh_key.txt
    gpg --list-keys |& grep -q 'ultimate.*security@redhat\.com' || trust_key
    cd {{ tmp_dir }}
    gpg --verify {{ openshift_version_minor }}-sha256sum.txt.sig |& grep -qF 'Good signature from "Red Hat' || exit 1
  register: import_key
  changed_when: '"changed" in import_key.stdout_lines'

- name: Read expected sha256 for installer, client, and helm
  ansible.builtin.set_fact:
    openshift_install_sum: >-
      {{ (lookup('file', '{{ tmp_dir }}/{{ openshift_version_minor }}-sha256sum.txt') |
        regex_search('\n?(\S*)\s*openshift-install-linux-' +
          openshift_version_minor|regex_escape() +
          '\.tar\.gz', multiline=true
        )).split() | first
      }}
    openshift_client_sum: >-
      {{ (lookup('file', '{{ tmp_dir }}/{{ openshift_version_minor }}-sha256sum.txt') |
        regex_search('\n?(\S*)\s*openshift-client-linux-' +
          openshift_version_minor|regex_escape() +
          '\.tar\.gz', multiline=true
        )).split() | first
      }}
    helm_sum: >-
      {{ (lookup('file', '{{ tmp_dir }}/helm-sha256sum.txt') |
        regex_search('\n?(\S*)\s*helm-linux-amd64\.tar\.gz', multiline=true
        )).split() | first
      }}

- name: Download latest release
  ansible.builtin.get_url:
    url: '{{ deconstructed_url }}'
    checksum: sha256:{{ item.sum }}
    dest: '{{ tmp_dir }}/openshift-{{ item.bin }}.tar.gz'
  vars:
    deconstructed_url: |-
      https://mirror.openshift.com/pub/openshift-v4/clients/{{ item.type }}/
      {%- if item.type == "ocp" -%}
      {{ openshift_channel }}-{{ openshift_version }}
      {%- else -%}
      latest
      {%- endif -%}
      /
      {%- if item.type == "ocp" -%}
      openshift-{{ item.bin }}-linux-{{ openshift_version_minor }}
      {%- else -%}
      {{ item.bin }}-linux-amd64
      {%- endif -%}
      .tar.gz
  register: downloads
  loop:
    - bin: install
      sum: '{{ openshift_install_sum }}'
      type: ocp
    - bin: client
      sum: '{{ openshift_client_sum }}'
      type: ocp
    - bin: helm
      sum: '{{ helm_sum }}'
      type: helm

- name: Remove untarred installers when an update was downloaded
  ansible.builtin.file:
    path: '{{ tmp_dir }}/{{ item }}'
    state: absent
  loop:
    - oc
    - openshift-install
    - helm
  when: downloads|json_query("length(results[?changed]) > `0`")

- name: Untar the archives
  ansible.builtin.unarchive:
    remote_src: yes
    src: '{{ tmp_dir }}/openshift-{{ item.type }}.tar.gz'
    dest: '{{ tmp_dir }}/'
    extra_opts:
    - --no-same-owner
    creates: '{{ tmp_dir }}/{{ item.creates }}'
  loop:
    - type: install
      creates: openshift-install
    - type: client
      creates: oc
    - type: helm
      creates: helm
